group 'com.capgemini.brahma'
description = """Brahma - A seed-project for spring-boot-camel apps which want to expose a REST API"""

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url "http://dl.bintray.com/capgeminiuk/maven/"
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.3.RELEASE")
        classpath 'com.netflix.nebula:nebula-release-plugin:4.1.1'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

jar {
    baseName = 'camel-boot'
    version = '0.1.0-SNAPSHOT'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url "http://dl.bintray.com/capgeminiuk/maven/"
    }
}

def springBootVersion = '1.4.3.RELEASE'
def camelVersion = '2.18.1'

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integrationtest/java')
        }
        resources.srcDir file('src/integrationtest/resources')
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
}

task integrationTest(type: Test) {
    testClassesDir = sourceSets.integrationTest.output.classesDir
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

dependencies {

    compile(group: 'org.apache.camel',         name: 'camel-spring-boot',                  version: camelVersion)
    compile(group: 'org.apache.camel',         name: 'camel-servlet',                      version: camelVersion)
    compile(group: 'org.apache.camel',         name: 'camel-jackson',                      version: camelVersion)
    compile(group: 'org.apache.camel',         name: 'camel-swagger-java',                 version: camelVersion)
    compile(group: 'org.apache.camel',         name: 'camel-cxf',                          version: camelVersion)
    compile(group: 'org.springframework.boot', name: 'spring-boot',                        version: springBootVersion)
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web',            version: springBootVersion)
    {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-jetty',          version: springBootVersion)
    compile(group: 'com.netflix.hystrix',      name: 'hystrix-core',                       version: '1.5.8')
    compile(group: 'com.netflix.hystrix',      name: 'hystrix-metrics-event-stream',       version: '1.5.8')
    compile(group: 'com.netflix.hystrix',      name: 'hystrix-javanica',                   version: '1.5.8')
    compile(group: 'ch.qos.logback',           name: 'logback-access',                     version: '1.1.6')
    compile(group: 'ch.qos.logback',           name: 'logback-classic',                    version: '1.1.6')
    compile(group: 'org.slf4j',                name: 'slf4j-api',                          version: '1.7.7')
    compile(group: 'com.bealetech',            name: 'metrics-statsd',                     version: '3.0.2')
    compile(group: 'com.capgemini',            name: 'codahale-metrics-filters',           version: '0.11.0')
    compile(group: 'com.capgemini',            name: 'springboot-camel-metrics-publisher', version: '0.12.0')
    compile(group: 'com.capgemini',            name: 'archaius-spring-adapter',            version: '0.10.2')
    compile(group: 'com.capgemini',            name: 'jetty-server-request-logger',        version: '0.9.0')

    testCompile(group: 'junit',                    name: 'junit',                    version: '4.12')
    testCompile(group: 'com.jayway.restassured',   name: 'rest-assured',             version: '2.4.1')
    testCompile(group: 'org.apache.camel',         name: 'camel-test-spring',        version: camelVersion)
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: springBootVersion)
}


configurations {
    compile.exclude(module: 'spring-boot-starter-tomcat')
    compile.exclude(module: 'spring-webmvc')
    compile.exclude(module: 'commons-logging')
}

springBoot {
    mainClass = 'org.apache.camel.spring.boot.FatJarRouter'
}